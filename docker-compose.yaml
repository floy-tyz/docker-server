version: '3.7'

services:

    proxy:
        image: jwilder/nginx-proxy
        container_name: nginx-proxy
        ports:
            - "81:80" # change port if host nginx is running @floy
            - "443:443" # change port if host nginx is running @floy
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - letsencrypt-certs:/etc/nginx/certs
            - letsencrypt-vhost-d:/etc/nginx/vhost.d
        networks:
            - proxy

    letsencrypt-proxy:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: letsencrypt-proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - letsencrypt-certs:/etc/nginx/certs
            - letsencrypt-vhost-d:/etc/nginx/vhost.d
        environment:
            - DEFAULT_EMAIL=steve@{your_email_domain}.com
            - NGINX_PROXY_CONTAINER=nginx-proxy

    mysql:
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        container_name: mysql
        restart: unless-stopped
        volumes:
            - ./database/data:/var/lib/mysql
        environment:
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
            - sql

    adminer:
        image: adminer:latest
        container_name: adminer
        environment:
            VIRTUAL_HOST: ${ADMINER_HOST}
            ADMINER_DEFAULT_SERVER: mysql
        networks:
            - frontend
            - sql

volumes:
    letsencrypt-certs:
    letsencrypt-vhost-d:

networks:

    proxy:
        driver: bridge
        name: docker_engine_proxy

    frontend:
        external:
            name: docker_engine_proxy

    sql:
        driver: bridge
        name: docker_engine_sql